package com.bacunguyenandroid.cdcswitchclient;import android.app.AlertDialog;import android.app.Service;import android.content.Intent;import android.graphics.PixelFormat;import android.os.Build;import android.os.IBinder;import android.support.v7.widget.CardView;import android.view.Gravity;import android.view.LayoutInflater;import android.view.MotionEvent;import android.view.View;import android.view.ViewGroup;import android.view.WindowManager;import android.view.animation.Animation;import android.view.animation.AnimationUtils;import android.widget.ImageView;import android.widget.Toast;public class GameService extends Service implements View.OnTouchListener,View.OnClickListener {    // TODO Window manager    private WindowManager wmg;    // TODO view    private ViewGroup ballonControl;    private View menuControl;    private View  mouseControl;    // TODO layout    private WindowManager.LayoutParams ballonLayout;    private WindowManager.LayoutParams mouseLayout;    // TODO bool    private  boolean IsmenuShow = false;    @Override    public int onStartCommand(Intent intent, int flags, int startId) {        return super.onStartCommand(intent, flags, startId);    }    @Override    public IBinder onBind(Intent intent) {        return null;    }    @Override    public void onCreate()    {        //create Pargram        SetupPargramFist();        // Add ballon        CreateBallonView();        AddBallon();        // Add mouse       // CreateMousePlayer();    }    // TODO Method    private void SetupPargramFist() {        //Windwow Manager        wmg = (WindowManager) getSystemService(WINDOW_SERVICE);        // ballon control        ballonLayout = new WindowManager.LayoutParams();        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O){            ballonLayout.type = WindowManager.LayoutParams.TYPE_PHONE;        }        else {            ballonLayout.type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;        }        ballonLayout.format = PixelFormat.TRANSPARENT;        ballonLayout.flags |= WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;        ballonLayout.width = WindowManager.LayoutParams.WRAP_CONTENT;        ballonLayout.height = WindowManager.LayoutParams.WRAP_CONTENT;        ballonLayout.gravity = Gravity.TOP | Gravity.LEFT;        ballonLayout.x = 0;        ballonLayout.y = 0;        // mouse control        mouseLayout = new WindowManager.LayoutParams();        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.O){            mouseLayout.type = WindowManager.LayoutParams.TYPE_PHONE;        }        else {            mouseLayout.type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;        }        mouseLayout.format = PixelFormat.TRANSPARENT;        mouseLayout.flags |= WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;        mouseLayout.flags |= WindowManager.LayoutParams.FLAG_NOT_TOUCHABLE;        mouseLayout.flags |= WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS;        mouseLayout.width = WindowManager.LayoutParams.WRAP_CONTENT;        mouseLayout.height = WindowManager.LayoutParams.WRAP_CONTENT;        mouseLayout.gravity = Gravity.TOP | Gravity.LEFT;        mouseLayout.x = 500;        mouseLayout.y = 500;    }    private  void CreateBallonView(){        ballonControl =(ViewGroup) LayoutInflater.from(this).inflate(R.layout.ballonlayout,null);        ImageView imageView = ballonControl.findViewById(R.id.imageMenu);        imageView.setOnTouchListener(this);        imageView.setOnClickListener(this);    }    private  void AddBallon(){        wmg.addView(ballonControl,ballonLayout);        ImageView imageView = ballonControl.findViewById(R.id.imageMenu);        Animation xuathien = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.xuathienballon);        imageView.startAnimation(xuathien);        imageView.setOnTouchListener(this);        imageView.setOnClickListener(this);    }    private  void AddMenu(final View view){        clearAnimation(view);        ((ImageView)view).setBackgroundResource(R.drawable.ballonbackicon);        Animation xuathienX = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.menuxuathien);        view.startAnimation(xuathienX);        //add menu control to control ballon        menuControl = LayoutInflater.from(this).inflate(R.layout.menucontrol,ballonControl);        wmg.updateViewLayout(ballonControl,ballonLayout);        CardView cardViewSd =  menuControl.findViewById(R.id.card_view_shutdown);        Animation xuathien = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.menuxuathien);        xuathien.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @Override            public void onAnimationEnd(Animation animation) {                view.setClickable(true);            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });        cardViewSd.startAnimation(xuathien);    }    private void RemoveMenu(final View view){        //bient mat viet        ((ImageView)view).setBackgroundResource(R.drawable.ballonicon);        Animation bientmat = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.bienmatmenu);        bientmat.setDuration(300);        bientmat.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @Override            public void onAnimationEnd(Animation animation) {                Animation xuathien = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.xuathienballon);                xuathien.setDuration(300);                xuathien.setAnimationListener(new Animation.AnimationListener() {                    @Override                    public void onAnimationStart(Animation animation) {                    }                    @Override                    public void onAnimationEnd(Animation animation) {                        view.setClickable(true);                    }                    @Override                    public void onAnimationRepeat(Animation animation) {                    }                });                view.startAnimation(xuathien);            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });        view.startAnimation(bientmat);        CardView cardViewSd =  menuControl.findViewById(R.id.card_view_shutdown);        clearAnimation(cardViewSd);        Animation bienmatsd = AnimationUtils.loadAnimation(getApplicationContext(), R.anim.bienmatmenu);        bienmatsd.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @Override            public void onAnimationEnd(Animation animation) {                try {                    ballonControl.removeView(ballonControl.findViewById(R.id.menucontrol));                    wmg.updateViewLayout(ballonControl,ballonLayout);                }                catch (Exception e){                }            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });        cardViewSd.startAnimation(bienmatsd);    }    private void CreateMousePlayer(){        mouseControl = LayoutInflater.from(this).inflate(R.layout.mouseplayer,null);    }    private void AddMousePlayer(){        wmg.addView(mouseControl,mouseLayout);    }    private void RemoveMousePlayer(){        wmg.removeView(mouseControl);    }    private  void clearAnimation(View view){        try {            view.getAnimation().cancel();            view.clearAnimation();        }        catch (Exception e){        }    }    //TODO EVENT LISTENER    @Override    public void onClick(View view) {        if(view.getId() == R.id.imageMenu){            if(IsmenuShow){                IsmenuShow = false;                view.setClickable(false);                RemoveMenu(view);            }            else  {                IsmenuShow = true;                view.setClickable(false);                AddMenu(view);            }        }    }    private  double OlX = 0;    private  double OlY = 0;    @Override    public boolean onTouch(View view, MotionEvent motionEvent) {        if(view.getId() == R.id.imageMenu){            switch (motionEvent.getAction()){                case  MotionEvent.ACTION_DOWN:                    OlX = motionEvent.getRawX();                    OlY = motionEvent.getRawY();                    return  false;                case MotionEvent.ACTION_MOVE:                    ballonLayout.x += (int)(motionEvent.getRawX() - OlX);                    ballonLayout.y += (int)(motionEvent.getRawY() - OlY);                    OlX = motionEvent.getRawX();                    OlY = motionEvent.getRawY();                    wmg.updateViewLayout(ballonControl,ballonLayout);                    return  false;            }        }        return false;    }}